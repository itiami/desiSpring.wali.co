plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'co.wali'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

sourceSets {
    main{
        java {
            exclude("**/*bak.java")
        }
    }
    test{
        java {
            exclude("**/*bak.java")
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.json:json:20231013'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.twilio.sdk:twilio:10.0.0-rc.6'
    // https://mvnrepository.com/artifact/com.azure/azure-identity
    implementation 'com.azure:azure-identity:1.11.1'
    implementation 'com.azure.resourcemanager:azure-resourcemanager:2.34.0'
    implementation 'com.azure.resourcemanager:azure-resourcemanager-compute:2.34.0'
    implementation 'com.azure.resourcemanager:azure-resourcemanager-network:2.34.0'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
